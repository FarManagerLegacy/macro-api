Работа с базой данных
=====================

:::functions
`ret = mf.serialize (value)`
:	Функция `serialize` преобразует переданное значение в строку.

	Параметры:

	`value`
	:	`nil`, `boolean`, `number`, `string`, `table`, `int64`

	Возвращает:

	`ret`
	:	`string`

	При сохранении таблиц будут сохраняться:

	- ключи типов: `number`, `string`, `boolean`, `table`
	- значения типов: `number`, `string`, `boolean`, `table`, `int64`

	Сохраняются вложенные таблицы, при этом рекурсивные вложения корректно обрабатываются.

	Сохраняется связь таблицы с её метатаблицей.

	Примечание

	`int64` - особый тип `userdata`, создаваемый библиотекой `bit64`.

`value, errmsg = mf.deserialize (str)`
:	Функция `deserialize` восстанавливает ранее сериализованное значение.

	Если 2-е возвращаемое значение `nil`, то 1-е возвращаемое значение валидно.

	Параметры:

	`str`
	:	`string`

	Возвращает:

	`value`
	:	`number`, `string`, `boolean`, `table`, `int64` or `nil`.

	`errmsg`
	:	`nil` в случае успеха, `string` в случае неудачи.

	Примечание

	`int64` - особый тип `userdata`, создаваемый библиотекой `bit64`.

`ret = mf.mdelete (key, name[, location])`
:	Функция удаляет значение или ключ из базы данных.

	Для удаления ключа следует указать параметр `name` == "`*`" (звёздочку).

	Параметры:

	`key`
	:	`string`

	`name`
	:	`string`

	`location`
	:	`string` ("`roaming`" или "`local`"; по умолчанию: "`roaming`")

	Возвращает:

	`ret`
	:	`boolean`

`value, errmsg = mf.mload (key, name[, location])`
:	Функция читает значение из базы данных.
	Если 2-е возвращаемое значение `nil`, то 1-е возвращаемое значение валидно.
        
	Параметры:

	`key`
	:	`string`

	`name`
	:	`string`

	`location`
	:	`string` ("`roaming`" или "`local`"; по умолчанию: "`roaming`")

	Возвращает:

	`value`
	:	`number`, `string`, `boolean`, `table`, `int64` или `nil`.

	`errmsg`
	:	`nil` в случае успеха, `string` в случае неудачи.


	Примечание

	`int64` - особый тип `userdata`, создаваемый библиотекой `bit64`.

`ret = mf.msave (key, name, value[, location])`
:	сохраняет переданное значение в базу данных.

	Параметры:

	`key`
	:	`string`

	`name`
	:	`string`

	`value`
	:	`nil`, `boolean`, `number`, `string`, `table`, `int64`

	`location`
	:	`string` ("`roaming`" или "`local`"; по умолчанию: "`roaming`")

	Возвращает:

	`ret`
	:	`boolean`

	При сохранении таблиц будут сохраняться:

	_ключи_ типов
	:	`number`, `string`, `boolean`, `table`

	_значения_ типов
	:	`number`, `string`, `boolean`, `table`, `int64`

	Сохраняются вложенные таблицы, при этом рекурсивные вложения корректно обрабатываются.

	Сохраняется связь таблицы с её метатаблицей.

	Примечание

	`int64` - особый тип `userdata`, создаваемый библиотекой `bit64`.
:::

